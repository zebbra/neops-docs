Module neops.core.provider.device_discovery
===========================================

Classes
-------

`DeviceDiscoveryProvider(**kwargs)`
:   Discover a device and populate datastructures.
    
    - `Recursive`: _Try to connect to neighbor devices (found with CDP and LLDP, with the same credentials),
    if the connection is successful add the device to neops_
    - `Interface Discovery`: _Populates and updates the interface data structures_
    - `Neighbor Discovery`: _Set relations between interfaces based on CDP and LLDP neighborships_
    - `Client Discovery`: _Add Clients to neops.io based on Mac Address-Table information_
    - `Get Configuration`: _Backup of Device and Interface Configurations to neops.io_

    ### Ancestors (in MRO)

    * neops.core.provider.base.base.NeopsBaseProvider
    * neops.core.provider.base.base_run_cycle.BaseRunCycle
    * neops.core.provider.base.base_process_result_cycle.BaseProcessResultCycle
    * abc.ABC
    * neops.core.libs.helptext.help_text_resolver.HelpTextResolver

    ### Methods

    `run_on_nornir_device(self, task: nornir.core.task.Task, execute_on: List = None, **kwargs) ‑> NoneType`
    :   `run_on_nornir_device` is called by the run cycle.
        It discovers the network elements