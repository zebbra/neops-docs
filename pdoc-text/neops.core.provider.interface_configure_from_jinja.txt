Module neops.core.provider.interface_configure_from_jinja
=========================================================

Classes
-------

`InterfaceJinjaConfigureProvider(**kwargs)`
:   This provider extends the NeopsBaseProvider by the functionality of storing configurations (on device results)
    to the device it self by different apply methods.
    
    This provider should be the base for configuration providers. So if you create a new configuration provider with,
    either extend this `NeopsConfigureBaseProvider` or a concrete configuration provider

    ### Ancestors (in MRO)

    * neops.core.provider.base.base_configure.NeopsConfigureBaseProvider
    * neops.core.provider.base.base.NeopsBaseProvider
    * neops.core.provider.base.base_run_cycle.BaseRunCycle
    * neops.core.provider.base.base_process_options.BaseProcessOptions
    * abc.ABC
    * neops.core.libs.helptext.help_text_resolver.HelpTextResolver

    ### Methods

    `run_on_device(self, task: nornir.core.task.Task, device_id: int, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, **kwargs) ‑> nornir.core.task.Result`
    :