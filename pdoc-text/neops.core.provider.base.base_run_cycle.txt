Module neops.core.provider.base.base_run_cycle
==============================================

Classes
-------

`BaseRunCycle()`
:   Description of the base run cycle for a provider

    ### Ancestors (in MRO)

    * abc.ABC

    ### Descendants

    * neops.core.provider.base.base.NeopsBaseProvider

    ### Class variables

    `name: str`
    :

    ### Methods

    `pre_run_global(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], result=neops.core.provider.base.result.provider_global_result.ProviderGlobalResult, **kwargs) ‑> Any`
    :

    `pre_run_on_client_of_interface(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, device_id: int, interface_id: int, client_id: int, client_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderClientResult, **kwargs) ‑> Any`
    :

    `pre_run_on_client_of_location(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], location_id: int, client_id: int, client_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderClientResult, **kwargs) ‑> Any`
    :

    `pre_run_on_device(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, device_id: int, device_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderDeviceResult, **kwargs) ‑> Any`
    :

    `pre_run_on_device_group(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], device_group_id: int, device_group_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderDeviceGroupResult, **kwargs) ‑> Any`
    :

    `pre_run_on_interface(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, device_id: int, interface_id: int, interface_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderInterfaceResult, **kwargs) ‑> Any`
    :

    `pre_run_on_nornir_device(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, nornir_device_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderNornirDeviceResult, **kwargs) ‑> Any`
    :

    `run_global(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], result=neops.core.provider.base.result.provider_global_result.ProviderGlobalResult, **kwargs) ‑> Any`
    :

    `run_on_client_of_interface(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, device_id: int, interface_id: int, client_id: int, client_result: neops.core.provider.base.result.coupled_provider_result_types.ProviderClientResult, **kwargs) ‑> Any`
    :

    `run_on_client_of_location(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], location_id: int, client_id: int, client_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderClientResult, **kwargs) ‑> Any`
    :

    `run_on_device(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, device_id: int, device_result: neops.core.provider.base.result.coupled_provider_result_types.ProviderDeviceResult, **kwargs) ‑> Any`
    :

    `run_on_device_group(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], device_group_id: int, device_group_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderDeviceGroupResult, **kwargs) ‑> Any`
    :

    `run_on_interface(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, device_id: int, interface_id: int, interface_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderInterfaceResult, **kwargs) ‑> Any`
    :

    `run_on_nornir_device(self, execute_on: List[int], execute_on_type: neops.core.provider.base.enum.RunOnEnum, dry_run: bool, task_input_kwargs: Dict[Any, Any], search_query: str, task_kwargs: Dict[Any, Any], task: nornir.core.task.Task, nornir_device_id: int, nornir_device_result=neops.core.provider.base.result.coupled_provider_result_types.ProviderNornirDeviceResult, **kwargs) ‑> Any`
    :